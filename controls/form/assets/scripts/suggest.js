/** * @author  */using("Controls.Core.IDropDownMenuContainer");using("Controls.Form.ListBox");var Suggest = Control.extend({		xType: 'suggest',		onKeyDown: function(e){		switch(e.keyCode) {			case 40:			case 38:				var oldIndex = this.dropDownMenu.getSelectedIndex(), newIndex, maxIndex = this.controls.length - 1, down = e.keyCode === 40 ;				if(oldIndex != -1) {					newIndex = oldIndex + ( down ? 1 : -1);					if(newIndex < 0) newIndex = maxIndex;					else if(newIndex > maxIndex) newIndex = 0;				} else {					newIndex = down ? 0 : maxIndex;				}				this.dropDownMenu.setSelectedIndex(newIndex);			    e.preventDefault();			    return;			case 13:								var currentIndex = this.dropDownMenu.getSelectedIndex();				if(currentIndex != -1) {					this.onSelect(this.controls[currentIndex]);					e.preventDefault();				}		}	},		getSuggestItems: function(text){		if(!this._values){			this._values = this.controls.invoke('getText', []);		}				return this._values.filter(function(value){			return value.indexOf(text) === 0;		});	},		showSuggest: function(){		var items = this.getSuggestItems(this.getText());				if(!items || !items.length)  {			return this.hideDropDownMenu();		}				this.items.clear();		this.items.push.apply(this.items, items);				this.showDropDownMenu();		this.dropDownMenu.setSelectedIndex(0);	},		onKeyUp: function(e){		switch(e.keyCode) {			case 40:			case 38:			case 13:			case 36:			case 37:			    return;		}						this.showSuggest();	},		onSelect: function(item){		this.setText(item.getText());		this.hideDropDownMenu();	},		init: function(options){		this.base('init');				this.setDropDownMenu(new Suggest.ListBox());				this.items = this.controls = this.dropDownMenu.controls;				this.on('keydown', this.onKeyDown);				this.on('focus', this.showSuggest);				this.on('keyup', this.onKeyUp);				this.on('blur', function () {			var me = this;
			setTimeout(function(){				me.hideDropDownMenu();			}, 200);
		});				this.dropDownMenu.on('select', this.onSelect, this);		this.dropDownMenu.on('mouseover', function (e) {
			var target = e.target;			if(target.tagName === 'LI'){				this.setSelectedIndex(Dom.get(target).getIndex());			}
		});		this.setAttr('autocomplete', 'off');	}	}).implement(IDropDownMenuContainer);Suggest.ListBox = ListBox.extend({		xType: 'suggest'	});