/** * @author  xuld */imports("Controls.Core.ListControl");using("Controls.Core.ScrollableControl");/** * 表示所有管理多个有序列的子控件的控件基类。 * @class ListControl * @extends ScrollableControl * ListControl 封装了使用  &lt;ul&gt; 创建列表控件一系列方法。 */var ListControl = ScrollableControl.extend({		onControlAdded: function(childControl, index){		var li = Dom.create('li', 'x-' + this.xType + '-content');		index = this.controls[index];		Dom.prototype.insertBefore.call(this.container, li.dom, index && index.getParent());		li.append(childControl);	},		onControlRemoved: function(childControl, index){		Dom.prototype.removeChild.call(this.container, childControl.getParent());	},		create: function(){		return document.createElement('div');	},		init: function(options){		this.items = this.controls;		this.addClass('x-' + this.xType);		this.container = (this.getFirst('ul') || Dom.create('ul', '').appendTo(this)).addClass('x-' + this.xType + '-container');	},		setActived: function(index, value){		this.controls[index].getParent('li').toggleClass('x-' + this.xType + '-actived', value);	}	});