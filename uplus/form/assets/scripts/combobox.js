/** * @author  */using("UPlus.Core.IDropDownMenuContainer");using("UPlus.Form.CombinedTextBox");using("UPlus.Form.ListBox");var ComboBox = CombinedTextBox.extend({		_values: {},		_replaceSelect: function(dom, options){				this.dom = this.create(options);				String.map('onchange onkeyup onkeydown onkeypress onclick name', dom, this.dom);		dom.name = '';				dom.parentNode.replaceChild(this.dom, dom);				for(var node = dom.firstChild; node; node = node.nextSibling) {			if(node.tagName  === 'OPTION') {				var t = JPlus.$(node).getText();			    this.items.add(t);			    if(node.value){			    	this.addValue(t, node.value);				    }				if(node.selected){					if(this._proxy)						this._proxy.value = node.value;					this.setText(t);				}			}		}			},		onKeyDown: function(e){		switch(e.keyCode) {				case 40:				case 38:					this.showDropDownMenu();					var newIndex, maxIndex = this.items.length - 1, down = e.keyCode === 40 ;					if(this._currentIndex != undefined) {						this.items.setActived(_currentIndex, false);						newIndex = this._currentIndex + ( down ? 1 : -1);						if(newIndex < 0) newIndex = maxIndex;						else if(newIndex > maxIndex) newIndex = 0;					} else {						newIndex = down ? 0 : maxIndex;					}					this.items.setActived(_currentIndex, true);				    e.preventDefault();				    return;				case 13:										if(this._currentIndex != undefined) {						this.selectItem(this.items[this._currentIndex]);						e.preventDefault();					}			}	},		initKey: function(){		this.on('keydown', this.onKeyDown);	},		init: function (options) {				// 初始化文本框		this.base('init', options);				// 创建并设置下拉菜单		var dropDownMenu = new ListBox();				// 绑定点击事件		dropDownMenu.on('valuechanging', Function.bind(this.selectItem, this));				// 绑定下拉菜单		this.items = dropDownMenu.items;				if(this.dom.tagName == 'SELECT') {			this._replaceSelect(this.dom, options);		}				this.setDropDownMenu(dropDownMenu);				// 点击下拉菜单 执行菜单显示		this.bindMenuButton('click', this.toggleDropDownMenu);				// 设置下拉菜单样式		this.setMenuButton('down');				this.initKey();	},		render: function(parent, refNode){		this.base('render', parent, refNode);		if(this._proxy){			this._proxy.render(parent, refNode);		}		return this;	},		addValue: function(text, value){		if(!this._proxy) {			this._values = {};			this._proxy = Element.parse('<inpput type="hidden">');			this._proxy.name = this.dom.name;			this.dom.name = '';		}		this._values[text] = value;	},		getValue: function(){		var text = this.getText();		return this._values[text] || text;	},		setValue: function(value){		for(var t in value){			if(value[t] === value){				this._proxy.value = value;				this.setText(t);				return;			}			}		if(this._proxy)			this._proxy.value = value;		this.setText(value);	},		selectItem: function (value) {		this.setText(Element.prototype.getText.call(value));		if(this._proxy) {			this._proxy.value = this._values[value] || value;		}				this.hideDropDownMenu();		this.trigger('change');				if(this._currentIndex != undefined) {			new Control(this.items[this._currentIndex]).get('parent', 'li').removeClass('b-listbox-actived');			this._currentIndex = undefined;		}				return false;	}}).implement(IDropDownMenuContainer);