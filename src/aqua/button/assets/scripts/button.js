/** * @author  */imports("Controls.Button.Button");using("Controls.Core.ContentControl");var Button = ContentControl.extend({		options: {		type: 'button'	},		tpl: '<a class="x-button">\			<span class="x-button-container">\				<span class="x-button-content">\					<button type="button"></button>\				</span>\			</span>\		</a>',		create: function(options){		var type = options.type;		delete options.type;		return Dom.parseNode(this.tpl.replace('"button"', '"' + type + '"'));	},		init: function(options){		this.content = this.find('button');	},		getDisabled: function(){		return this.content.getAttr('disabled') !== false ;	},		on: function (type, fn, bind) {
		return this.content.on(type, fn, bind === undefined ? this : bind);
	},		setDisabled: function(value){		value = value !== false;		this.toggleClass('x-disabled', value);		this.content.setAttr('disabled', value);	}	});Control.delegate(ContentControl, 'content', 'un trigger one');